# Generated by Django 4.0.3 on 2022-03-31 07:46

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blog', '0018_rename_category_postcpp_categorycpp_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoryjava',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titlejava', models.CharField(blank=True, max_length=255, null=True, verbose_name='Titlejava')),
            ],
        ),
        migrations.CreateModel(
            name='Categorypython',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titlepython', models.CharField(blank=True, max_length=255, null=True, verbose_name='Titlepython')),
            ],
        ),
        migrations.RenameField(
            model_name='postcpp',
            old_name='level',
            new_name='docdetails',
        ),
        migrations.RenameField(
            model_name='postcpp',
            old_name='link',
            new_name='qndetails',
        ),
        migrations.AddField(
            model_name='postcpp',
            name='videodetails',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='commentcpp',
            name='postcpp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentscpp', to='blog.postcpp'),
        ),
        migrations.CreateModel(
            name='Postpython',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titlepython', models.CharField(max_length=150, verbose_name='Titlepython')),
                ('categorypython', models.CharField(default='coding', max_length=255)),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('videodetails', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('qndetails', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('docdetails', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('topics', models.CharField(default='sample', max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='blogpostpython', to=settings.AUTH_USER_MODEL)),
                ('saves', models.ManyToManyField(blank=True, related_name='blogsavepython', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Postjava',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titlejava', models.CharField(max_length=150, verbose_name='Titlejava')),
                ('categoryjava', models.CharField(default='coding', max_length=255)),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('videodetails', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('qndetails', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('docdetails', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('topics', models.CharField(default='sample', max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='blogpostjava', to=settings.AUTH_USER_MODEL)),
                ('saves', models.ManyToManyField(blank=True, related_name='blogsavejava', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Commentpython',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=200)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='blogcommentpython', to=settings.AUTH_USER_MODEL)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('postpython', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentspython', to='blog.postpython')),
                ('reply', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.commentpython')),
            ],
        ),
        migrations.CreateModel(
            name='Commentjava',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=200)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='blogcommentjava', to=settings.AUTH_USER_MODEL)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('postjava', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentsjava', to='blog.postjava')),
                ('reply', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.commentjava')),
            ],
        ),
    ]
